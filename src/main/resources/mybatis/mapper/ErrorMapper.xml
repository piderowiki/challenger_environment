<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ynu.challenger.mapper.ErrorMapper">
  <resultMap id="BaseResultMap" type="com.ynu.challenger.PO.Error">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="machineName" jdbcType="VARCHAR" property="machinename" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="errorReason" jdbcType="VARCHAR" property="errorreason" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="urgency" jdbcType="INTEGER" property="urgency" />
    <result column="account" jdbcType="INTEGER" property="account" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, machineName, time, errorReason, state, address, urgency, account
  </sql>
  <select id="selectByExample" parameterType="com.ynu.challenger.PO.ErrorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_error
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_error
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_error
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ynu.challenger.PO.ErrorExample">
    delete from t_error
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ynu.challenger.PO.Error">
    insert into t_error (id, machineName, time, 
      errorReason, state, address, 
      urgency, account)
    values (#{id,jdbcType=INTEGER}, #{machinename,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{errorreason,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{urgency,jdbcType=INTEGER}, #{account,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ynu.challenger.PO.Error">
    insert into t_error
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="machinename != null">
        machineName,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="errorreason != null">
        errorReason,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="urgency != null">
        urgency,
      </if>
      <if test="account != null">
        account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="machinename != null">
        #{machinename,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="errorreason != null">
        #{errorreason,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="urgency != null">
        #{urgency,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ynu.challenger.PO.ErrorExample" resultType="java.lang.Long">
    select count(*) from t_error
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_error
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.machinename != null">
        machineName = #{record.machinename,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.errorreason != null">
        errorReason = #{record.errorreason,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.urgency != null">
        urgency = #{record.urgency,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_error
    set id = #{record.id,jdbcType=INTEGER},
      machineName = #{record.machinename,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      errorReason = #{record.errorreason,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      urgency = #{record.urgency,jdbcType=INTEGER},
      account = #{record.account,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ynu.challenger.PO.Error">
    update t_error
    <set>
      <if test="machinename != null">
        machineName = #{machinename,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="errorreason != null">
        errorReason = #{errorreason,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="urgency != null">
        urgency = #{urgency,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ynu.challenger.PO.Error">
    update t_error
    set machineName = #{machinename,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      errorReason = #{errorreason,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      urgency = #{urgency,jdbcType=INTEGER},
      account = #{account,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>